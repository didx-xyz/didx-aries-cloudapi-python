name: Deploy to ECR

on:
  push:
    branches: [development]
  pull_request:
    branches: [development]

jobs:
  deploy:
    name: Build image and push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code and build
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

        run: |
          bash ./scripts/install_latest_docker-compose.sh

          # TODO: check if repos already exist
          #bash create_ecr_repos.sh
          # TODO: standardised release management
          # Stopgap logic to have tagged images

          SHA_SHORT="$(git rev-parse --short HEAD)"
          BRANCH="$(git rev-parse --abbrev-ref HEAD)"

          echo ${SHA_SHORT}
          echo ${BRANCH}

          for TAG in ${BRANCH} ${BRANCH}-${SHA_SHORT} ; do
            export IMAGE_TAG=${TAG}
            docker-compose build
            docker-compose push
          done
