name: Deploy to ECR

on:
  workflow_dispatch:
  push:
    branches:
      - "development"
    tags:
      - "v*"
  pull_request:
    branches:
      - "development"
  pull_request_review:
    types: [submitted]

jobs:
  build:
    name: Build image and push to ECR
    runs-on: ubuntu-latest

    outputs:
      image_version: ${{ steps.meta.outputs.version }}

    strategy:
      matrix:
        image:
          [
            governance-ga-agent,
            governance-trust-registry,
            governance-multitenant-web,
            governance-webhooks-web,
            governance-multitenant-agent,
            ledger-browser,
            ledger-nodes,
            governance-endorser,
          ]
        include:
          - image: governance-ga-agent
            context: .
            file: dockerfiles/agents/Dockerfile.agent
          - image: governance-trust-registry
            context: .
            file: dockerfiles/trustregistry/Dockerfile
          - image: governance-multitenant-web
            context: .
            file: dockerfiles/fastapi/Dockerfile
          - image: governance-webhooks-web
            context: .
            file: dockerfiles/webhooks/Dockerfile
          - image: governance-multitenant-agent
            context: .
            file: dockerfiles/agents/Dockerfile.author.agent
          - image: ledger-browser
            context: https://github.com/didx-xyz/von-network.git
            file: Dockerfile
          - image: ledger-nodes
            context: https://github.com/didx-xyz/von-network.git
            file: Dockerfile
          - image: governance-endorser
            context: .
            file: dockerfiles/endorser/Dockerfile

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker images
        if: github.event.name != 'pull_request_review'
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to EKS
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT

    env:
      projects: |
        governance-ga-agent
        governance-multitenant-agent
        governance-multitenant-web
        governance-trust-registry
        governance-webhooks-web
        governance-endorser
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Checkout Helm chart
        uses: actions/checkout@v3
        with:
          repository: didx-xyz/cloud_api_helm
          token: ${{ secrets.HELM_REPO_TOKEN }} # private access token here, for HTTPS clones
          path: helm/Chart

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: af-south-1
          role-to-assume: arn:aws:iam::402177810328:role/cicd
          role-session-name: github-cicd

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Install helm plugins
        run: |
          helm plugin install https://github.com/jkroepke/helm-secrets --version v4.4.2
          helm plugin install https://github.com/databus23/helm-diff

      - name: Setup Go
        uses: actions/setup-go@v4

      - name: Install sops
        run: |
          go install go.mozilla.org/sops/v3/cmd/sops@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --name cloudapi-dev

      - name: Tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          version: 1.38.2
          args: --advertise-tags=tag:cicd

      - name: Symlink shared models
        run: |
          mkdir -p helm/Chart/assets
          cd helm/Chart/assets
          ln -s ../../../shared_models .

      - name: Diff upgrade
        run: |
          for project in $(echo "${{ env.projects }}" | sed 's/\n/ /g'); do
            helm -n dev-cloudapi \
              secrets diff upgrade "${project}" \
              --install \
              --set image.tag=${{ needs.build.outputs.image_version }} \
              -f ./helm/Chart/values/dev/${project}.yaml \
              -f ./helm/Chart/secrets/dev/${project}.yaml \
              ./helm/Chart
          done

      - name: Update deployments
        if: github.event.review.state == 'approved'
        run: |
          for project in $(echo "${{ env.projects }}" | sed 's/\n/ /g'); do
            helm -n dev-cloudapi \
              secrets upgrade "${project}" \
              --install \
              --atomic \
              --timeout=300s \
              --set image.tag=${{ needs.build.outputs.image_version }} \
              -f ./helm/Chart/values/dev/${project}.yaml \
              -f ./helm/Chart/secrets/dev/${project}.yaml \
              ./helm/Chart
          done
